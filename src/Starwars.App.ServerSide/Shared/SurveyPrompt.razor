<div class="alert alert-secondary mt-4" role="alert">
    <span class="oi oi-pencil mr-2" aria-hidden="true"></span>
    <strong>@Title</strong>

    <span class="text-nowrap">
        Please take our
        <a target="_blank" class="font-weight-bold" href="https://go.microsoft.com/fwlink/?linkid=2137813">brief survey</a>
    </span>
    and tell us what you think.
</div>

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public List<string> Events { get; set; }

    [Parameter]
    public int DelayInMilliseconds { get; set; } = 0;

    private string _prefix = "[Component] SurveyPrompt > ";

    protected override void OnInitialized()
    {
        if (Events!=null)
        {
            Events.Add($"{_prefix} OnInitialized...");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        if (Events != null)
        {
            Events.Add($"{_prefix} OnInitializedAsync... (delay = {DelayInMilliseconds}ms)");
            await Task.Delay(DelayInMilliseconds);
        }
    }

    protected override void OnParametersSet()
    {
        if (Events != null)
        {
            Events.Add($"{_prefix} OnParametersSet...");
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Events != null)
        {
            Events.Add($"{_prefix} OnParametersSetAsync... (delay = {DelayInMilliseconds}ms)");
            await Task.Delay(DelayInMilliseconds);
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (Events != null)
        {
            Events.Add($"{_prefix}OnAfterRender [FirstRender={firstRender}]...");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (Events != null)
        {
            Events.Add($"OnAfterRenderAsync [FirstRender={firstRender}]... (delay = {DelayInMilliseconds}ms)");
            await Task.Delay(DelayInMilliseconds);
        }
    }

    protected override bool ShouldRender()
    {
        if (Events != null)
        {
            Events.Add($"{_prefix}ShouldRender...");
        }
        return true;
    }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        if (Events != null)
        {
            Events.Add($"{_prefix}SetParametersAsync [Parameter View]... (delay = {DelayInMilliseconds}ms)");

        }

        await base.SetParametersAsync(parameters);
        await Task.Delay(DelayInMilliseconds);
    }

}
